{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "Untitled7.ipynb",
      "provenance": [],
      "authorship_tag": "ABX9TyO7MkywCC3hdxzLI+S3Bo/F",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/juanlu29/juanlu29/blob/contaminacionMadrid/ajusteParametros_tren\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "hLkJ_loOAplM",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        ""
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "QAiifmmuBHON",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "class datosVisualizacion():\n",
        "  '''\n",
        "  Esta clase contiene los datos de entrenamiento y realizaciones de los procesos gaussianos para la visualización de los mismos\n",
        "  '''\n",
        "  def __init__(self,Titulo):\n",
        "    self.x = []\n",
        "    self.y = []\n",
        "    self.sigma = []\n",
        "    self.realizacion_dict = {}\n",
        "    self.titulo = Titulo\n",
        "    self.inicializacionPlot()\n",
        "\n",
        "  def inicializacionPlot(self):\n",
        "    '''\n",
        "    Inicializa el objeto matplotlib\n",
        "    '''\n",
        "    self.fig,self.ax = plt.subplots(nrows=1,ncols=1,figsize=(10,10))\n",
        "    self.ax.set_title(self.titulo)\n",
        "    self.fig_hm, self.ax_hm = plt.subplots(nrows=1,ncols=1,figsize=(10,10))\n",
        "\n",
        "  def add_covariance(self, cov):\n",
        "    '''\n",
        "    Añada matriz de covarianza y alternativamente calcula la covarianza del proceso gaussiano sobre el dominio\n",
        "    '''\n",
        "\n",
        "    self.cov_GP = cov\n",
        "\n",
        "  def add_mean(self,X,Mean):\n",
        "    '''\n",
        "    Almacena la desviación estándar de un proceso gausiano dado\n",
        "    '''\n",
        "    self.x_mean = X\n",
        "    self.mean = Mean\n",
        "\n",
        "\n",
        "  def add_sigma(self,X,Sigma):\n",
        "    '''\n",
        "    Almacena la desviación estándar de un proceso gausiano dado\n",
        "    '''\n",
        "    self.x_sigma = X\n",
        "    self.sigma = Sigma\n",
        "    self.meanMarker = 'r-'\n",
        "\n",
        "  def add_train_data(self,X,Y):\n",
        "    self.xtrain = X\n",
        "    self.ytrain = Y\n",
        "    self.marker = '*'\n",
        "\n",
        "  def add_data(self,X,Y,label):\n",
        "    self.x.append(X)\n",
        "    self.y.append(Y)\n",
        "    self.realizacion_dict[label] = len(self.x)-1\n",
        "\n",
        "  def add_corrPuntoPunto(self,corrPP, corrInputs):\n",
        "    '''\n",
        "    Añade correlaciones punto a punto sobre un dominio dado por los valores corrInputs\n",
        "    '''\n",
        "    self.corrPP = corrPP\n",
        "    self.corr_in = corrInputs\n",
        "\n",
        "  def add_data_plot(self,label):\n",
        "    try:\n",
        "      self.ax.plot(self.x[self.realizacion_dict[label]],self.y[self.realizacion_dict[label]],'g--')\n",
        "    except:\n",
        "      print('No existe datos referentes a etiqueta :',label)\n",
        "\n",
        "  def add_train_data_plot(self):\n",
        "    try:\n",
        "      self.ax.plot(self.xtrain,self.ytrain,self.marker)\n",
        "    except:\n",
        "      print('No existen datos de entrenamiento')\n",
        "\n",
        "  def add_mean_plot(self):\n",
        "    try:\n",
        "      self.ax.plot(self.x_mean,self.mean,self.meanMarker)\n",
        "    except:\n",
        "      print('No existen datos de entrenamiento')\n",
        "\n",
        "\n",
        "\n",
        "  def contorno_sigma(self):\n",
        "    '''\n",
        "    Muestra en pantalla contorno de 1 y 2 veces los valores de sigma del proceso gausiano\n",
        "    '''\n",
        "    self.ax.fill(np.concatenate((self.x_sigma,self.x_sigma[::-1])),\n",
        "             np.concatenate((self.mean - 1.9600 * self.sigma,\n",
        "                             (self.mean + 1.9600 * self.sigma)[::-1])),\n",
        "             alpha=.45, fc='y', ec='None', label='95% confidence interval')\n",
        "    self.ax.fill(np.concatenate((self.x_sigma,self.x_sigma[::-1])),\n",
        "             np.concatenate((self.mean - 1.000 * self.sigma,\n",
        "                             (self.mean + 1.000 * self.sigma)[::-1])),\n",
        "             alpha=.35, fc='b', ec='None', label='68% confidence interval')\n",
        "    \n",
        "  def plotCorrPuntoPunto(self,indices):\n",
        "    '''\n",
        "    Visualiza correlaciones punto a punto para los inputs dados por sus indices en la lista indices como argumento del metodo\n",
        "    '''\n",
        "\n",
        "    ' Generamos y visualizamos las imagen directamente en este metodo'\n",
        "    self.fig_cpp, self.ax_cpp = plt.subplots(nrows=1,ncols=1,figsize=(10,10))\n",
        "    try:\n",
        "      [self.ax_cpp.plot(self.corr_in,self.corrPP[indice],'-') for indice in indices] \n",
        "    except:\n",
        "      print('No existe datos referentes referentes a correlaciones punto a punto')\n",
        "    self.ax_cpp.grid(True)\n",
        "    self.fig_cpp.show()\n",
        "\n",
        "\n",
        "\n",
        "  def mostrarPlot(self):\n",
        "    '''\n",
        "    Muestra plot\n",
        "    '''\n",
        "    self.add_mean_plot()\n",
        "    self.add_train_data_plot()\n",
        "    self.contorno_sigma()\n",
        "    self.ax.grid(True)\n",
        "    self.fig.show()\n",
        "\n",
        "  def hmapCov(self):\n",
        "    '''\n",
        "    Visualiza covarianza como campo bidimensional\n",
        "    '''\n",
        "    plotRange = np.arange(len(self.cov_GP))\n",
        "    heatmap = self.ax_hm.pcolormesh(self.cov_GP,cmap='RdBu_r')\n",
        "    self.ax_hm.axis([plotRange.min(), plotRange.max(), plotRange.max(), plotRange.min()])\n",
        "    self.fig_hm.colorbar(heatmap, ax=self.ax_hm)\n",
        "    self.fig_hm.show()\n"
      ],
      "execution_count": 25,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "CVgZHACqBKer",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "class gaussProcess():\n",
        "  def __init__(self,dominio,observacion,*hiper):\n",
        "    '''\n",
        "    Los objetos de esta clase modelan procesos gaussianos caracterizados por su promedio y covarianza\n",
        "    Como argumento inicial incluimos el data set sobre el que se va a trabajar, su dominio y las observaciones como ndarrays\n",
        "    '''\n",
        "    #self.Derivadas = prior_Partial_Der\n",
        "    self.Kernels = self.kernels()\n",
        "    # Sea dominio = [x], observacion = [y], matrices columna\n",
        "    # Se crean matrices [[x],[x],...] (longitud de la concatenacion nx) y [[y],[y],...] (longitud de la concatenacion ny)\n",
        "    # Nos aseguramos de darle forma de columna\n",
        "    self.Dominio = np.reshape(dominio,(len(dominio),1))\n",
        "    self.Observacion = np.reshape(observacion,(len(observacion),1))\n",
        "    self.Hiper = hiper# Son necesarios para devolver los resultados necesarios en los calculos matriciales\n",
        "    # Creamos las matrices anteriormente mencionadas\n",
        "    self.xM = np.full((len(self.Dominio),len(self.Dominio)),self.Dominio)\n",
        "    self.yM = np.full((len(self.Observacion),len(self.Observacion)),self.Observacion)\n",
        "    # Los calculos de matrices covariantes seran siempre llamando los metodos pertinentes\n",
        "    # de la siguiente manera\n",
        "    # self.calcCovM(xM,xM.T)\n",
        "    # self.calcDerCovM(xM,xM.T)\n",
        "    # Tal como la matriz xM ha sido creada antes\n",
        "    \n",
        "    self.objetoKernel = self.kernels()\n",
        "    self.averlo = lambda PPP,QQQ,AAAA : self.objetoKernel.ruidoBlanco(PPP,QQQ,AAAA)\n",
        "    self.vruidoBlanco = np.vectorize(self.averlo)\n",
        "\n",
        "  def calcCovM(self,x1M,x2M):\n",
        "    '''\n",
        "    Dados x e y como ndarrays, calcula la matriz de covarianzas cuyos elementos son evaluados de la forma\n",
        "    C(xi,yi) = (k(xi,yi)) con rango (nx x ny) donde nx y ny son la longitud de los vectores x  e y respectivamente.\n",
        "    hiper son los hiperparámetros usados en el modelo\n",
        "    '''\n",
        "    # Llamamos la funcion Ker que nos debe devolver como salida una matriz cuyos elementos calculados representan k(x,y)\n",
        "    return self.Ker(x1M,x2M,*self.Hiper)\n",
        "\n",
        "  def calcDerCovM(self,x1M,x2M):\n",
        "    '''\n",
        "    Dados x e y como ndarrays, calcula la matriz correspondiente a la derivada respecto los hiperparámetros de las covarianzas\n",
        "    cuyos elementos son evaluados de la forma C_j(xi,yi) = (dk(xi,yi)dh_j) con rango (nx x ny) donde nx y ny son la longitud de los \n",
        "    vectores x e y respectivamente. Hiper son los hiperparámetros usados en el modelo\n",
        "    '''\n",
        "    # Generamos el array de matrices llamando al zip de las funciones de derivadas y sus hiperparámetros para generarlas\n",
        "    return np.asarray([ self.DerKer[i](x1M,x2M,*self.Hiper) for i in range(len(self.DerKer)) ] )\n",
        "\n",
        "  def compCov(self,covarianza):\n",
        "    '''\n",
        "    Permite definir el kernel a usar por el proceso gaussiano, tanto si es uno de los kernels definidos en la clase como si es una combinacion de los mismos\n",
        "    El argumento es una funcion anónima en caso de ser una composición, en caso contrario es suficiente con proporcionar el nombre del kernel definido\n",
        "    hiper son los hiperparámetros que precisan el kernel y vienen dado por un diccionario\n",
        "    '''\n",
        "    self.Ker = covarianza # Covarianza definida\n",
        "    self.Ker = np.vectorize(self.Ker)\n",
        "\n",
        "  def compDerCov(self,derCovarianza):\n",
        "    '''\n",
        "    Permite definir la expresion para la derivada del kernel respecto los distintos hiperparametros como un iterable zip\n",
        "    de funciones anonimas juntos a sus hiperparámetros. \n",
        "    En este caso por propositos de optimizacion se espera que se evalue dinamicamente con distintos hiperparámetros.\n",
        "    Los datos contenidos en *hiper están encapsulados en una tupla a la que se debe acceder previamente\n",
        "    '''\n",
        "    try:\n",
        "      self.DerKer = derCovarianza\n",
        "    except:\n",
        "      raise NameError(\"No se ha definido kernel previamente\")\n",
        "\n",
        "\n",
        "  class kernels():\n",
        "    '''\n",
        "    Se definen kernels de uso común junto a sus hiperparámetros y derivadas asociadas\n",
        "    '''\n",
        "    def __init__(self):\n",
        "      return\n",
        "\n",
        "    def exponencialCuadrada(self,xb,xa,s,l):\n",
        "      '''\n",
        "      Correlacion estacionaria (depende solo de la distancia r = abs(xb-xa)) con decaimiento exponencial cuadratico\n",
        "\n",
        "      k(xb,xa) = s² exp( - (xb-xa)²/(2 l²) )\n",
        "\n",
        "      Hiperparámetros:\n",
        "      s : amplitud de la correlacion, esta relacionado con la amplitud de las trayectorias generadas por el GP\n",
        "      l : escala de longitud del GP. Esta relacionada con la distancia sobr la cual los procesos generados por el GP pueden presentar oscilaciones o variaciones\n",
        "      '''\n",
        "      return np.power(s,2)*np.exp(-np.power(xa-xb,2)/(2.*np.power(l,2)))\n",
        "\n",
        "    def expCua_der_s(self,xb,xa,s,l):\n",
        "      '''\n",
        "      Derivada respecto el hiperparámetro s de las correlaciones estacionarias con decaimiento exponenciales cuadráticas\n",
        "\n",
        "      k(xb,xa) = 2s exp( - (xb-xa)²/(2 l²) )\n",
        "\n",
        "      Hiperparámetros:\n",
        "      s : amplitud de la correlacion, esta relacionado con la amplitud de las trayectorias generadas por el GP\n",
        "      l : escala de longitud del GP. Esta relacionada con la distancia sobr la cual los procesos generados por el GP pueden presentar oscilaciones o variaciones\n",
        "      '''\n",
        "      return 2*s*np.exp(-np.power(xa-xb,2)/(2.*np.power(l,2)))\n",
        "\n",
        "    def expCua_der_l(self,xb,xa,s,l):\n",
        "      '''\n",
        "      Derivada respecto el hiperparámetro l de las correlaciones estacionarias con decaimiento exponenciales cuadráticas\n",
        "\n",
        "      k(xb,xa) = s²(xb-xa)² / l³ exp( - (xb-xa)²/(2 l²) )\n",
        "\n",
        "      Hiperparámetros:\n",
        "      s : amplitud de la correlacion, esta relacionado con la amplitud de las trayectorias generadas por el GP\n",
        "      l : escala de longitud del GP. Esta relacionada con la distancia sobr la cual los procesos generados por el GP pueden presentar oscilaciones o variaciones\n",
        "      '''\n",
        "      return (np.power(s*(xa-xb),2)/np.power(l,3))*np.exp(-np.power(xa-xb,2)/(2.*np.power(l,2)))\n",
        "\n",
        "    def ruidoBlanco(self,xb,xa,sigma):\n",
        "      '''\n",
        "      Correlaciones de ruido blanco o gaussiano puro, solo correlaciona los puntos consigo mismo. \n",
        "\n",
        "      k(xb,xa) = sigma² delta(xb,xa)\n",
        "\n",
        "      Representa incertidumbres intrínsecas en las observaciones y asume una distribución a priori de esos errores gaussiano\n",
        "      Hiperparáámetros:\n",
        "      s : amplitud o incertidumbre del ruido generado\n",
        "      '''\n",
        "      return np.where(xb==xa, np.power(sigma,2),0.) # Se usa el metodo numpy.where porque las operaciones logicas sobre arrays son consideradas ambiguas en el intérprete de python\n",
        "                                                    # Esta manera es válidad para python para comprar elemento a elemento entre matrices.\n",
        "\n",
        "    def rB_der_sigma(self,xb,xa,sigma):\n",
        "      '''\n",
        "      Derivada respecto el hiperparámetro sigma del ruido no correlacionado\n",
        "\n",
        "      k(xb,xa) = sigma² delta(xb,xa)\n",
        "\n",
        "      Representa incertidumbres intrínsecas en las observaciones y asume una distribución a priori de esos errores gaussiano\n",
        "      Hiperparáámetros:\n",
        "      s : amplitud o incertidumbre del ruido generado\n",
        "      '''\n",
        "      return np.where(xb==xa, 2*sigma,0.) # Se usa el metodo numpy.where porque las operaciones logicas sobre arrays son consideradas ambiguas en el intérprete de python\n",
        "                                          # Esta manera es válidad para python para comprar elemento a elemento entre matrices.\n",
        "\n",
        " \n",
        "  def cholDescomp(self,K):\n",
        "    '''\n",
        "    Descomposicion cholesky de una matriz dada\n",
        "    '''\n",
        "    try:\n",
        "      L = scipy.linalg.cholesky(K, lower=True)\n",
        "    except:\n",
        "      print(\"La matriz tiene autovalores negativos\")\n",
        "      eigK = scipy.linalg.eigvals(K)\n",
        "      # Autovalores negativos\n",
        "      #eigK = np.where(eigK > 0.,np.amax(eigK),-eigK)\n",
        "      # Parte real, en valor absoluto, del autovalor negativo de mayor amplitud\n",
        "      negIndx = np.where(np.real(eigK)<0)\n",
        "      nEigK = eigK[negIndx]\n",
        "      nEigK_max = np.amax(nEigK) # Valor negativo mas alto\n",
        "      print(nEigK_max)\n",
        "      nnEigK_max = np.abs(nEigK_max)\n",
        "      print(\"El autovalor con parte real negativa de mayor amplitud es :\",nEigK_max,nnEigK_max)\n",
        "      # Añadimos un termino de ruido independiente sobre el dominio de amplitud cuadrada igual al valor del autovalor negativo mayor\n",
        "      L = scipy.linalg.cholesky(K + np.diag(nnEigK_max*10000*np.ones(int(np.sqrt(K.size)))), lower=True)\n",
        "\n",
        "    return L\n",
        "\n",
        "  def calcInvK(self,matriz):\n",
        "    '''\n",
        "    Calculo de la inversa de matriz. \n",
        "    '''\n",
        "    # Calculo de matriz inversa de la covarianza. \n",
        "    try:\n",
        "      invK = np.linalg.inv(matriz)\n",
        "    except:\n",
        "      raise NameError(\"No es posible calcular matriz inversa\")\n",
        "\n",
        "    return invK\n",
        "\n",
        "\n",
        "  def condicionarGP(self,dominio_test):\n",
        "    '''\n",
        "    Dadas unas observaciones junto a sus valores de dominio (uni-dimensionales) en el rango sobre el que se modela el GP, \n",
        "    obtiene la covarianza asociada a la distribución de trayectorias condicionadas al conjunto de partida dado un dominio \n",
        "    de test en el que queremos comprobar la predicción. Por tanto permite generar las trayectorias compatibles con los datos\n",
        "\n",
        "    También calcula el logaritmo de la probabilidad de verosimilitud marginal (marginal likelihood) de las observaciones dados los inputs \n",
        "    y parámetros del modelo usado.\n",
        "\n",
        "    Este algoritmo esta especificado en el libro \"Gaussian Processes for Machine Learning\", como algoritmo 2.1\n",
        "    '''\n",
        "    \n",
        "    # Por la vectorizacion en el cálculo de las matrices de covarianza, el argumento cuando se tiene un kernel\n",
        "    # evaluado entre elementos que difieren de dimension, cada uno de estos argumentos debe ocupar\n",
        "    # un array de dimension del producto final\n",
        "    # kernel(A,B) = {kernel(a,b)} con a, b elementos de A,B respectivamente implica\n",
        "    # self.calc(A*,B*) con A*,B* con dimensiones A x B\n",
        "    # -\n",
        "    cross_test = np.full((len(self.Dominio),len(dominio_test)),dominio_test)\n",
        "    # -    \n",
        "    cross_dominio = np.full((len(self.Dominio),len(dominio_test)),self.Dominio)\n",
        "    # El producto vectorizado\n",
        "    self.Cov_obs_test = self.calcCovM(cross_dominio,cross_test)#- self.vruidoBlanco(cross_dominio,cross_test,100.)\n",
        "    # -\n",
        "    # -\n",
        "    test = np.reshape(dominio_test,(len(dominio_test),1))\n",
        "    test = np.full((len(dominio_test),len(dominio_test)),test)\n",
        "    \n",
        "    \n",
        "\n",
        "    # Definimos nueva covarianza\n",
        "    # Primero se realiza la descomposición cholesky de la adición de la covarianza de la distribución a priori,\n",
        "    # para lo cual calculamos la matriz de covarianza asociada al dominio de las observaciones sobre si mismo\n",
        "    # y al cruce del dominio de las observaciones y del test de prediccion.\n",
        "    try:\n",
        "      self.Cov_obs_obs = self.calcCovM(self.xM,self.xM.T)\n",
        "    except:\n",
        "      raise NameError(\"Debes especificar primero el kernel que estas usando junto a sus hiperparametros con el metodo self.compCov\")\n",
        "\n",
        "    cholL = self.cholDescomp(self.Cov_obs_obs) \n",
        "\n",
        "    # Calculo del vector alfa como solucion del sistema K_obs_obs*alfa = y_entrenamiento usando la descomposición cholesky anterior\n",
        "    self.Alfa = scipy.linalg.cho_solve((cholL,True),self.Observacion)\n",
        "    \n",
        "    # Vector v solución particular del sistema cholL*v = k_test para todos los datos del entrenamiento.\n",
        "    # Este sistema se resuelve introduciendo k_star no como matriz columna sino como la submatriz calculada como la evaluación de la covarianza a priori de los inputs de los valores a predecir y los inputs del entrenamiento\n",
        "    v = scipy.linalg.solve_triangular(cholL,self.Cov_obs_test, lower=True)\n",
        "    \n",
        "    # Se obtiene el valor promedio del proceso predictivo condicionado a las observaciones\n",
        "    self.Media_pred = np.matmul(self.Cov_obs_test.T,self.Alfa)\n",
        "\n",
        "    # Covarianza predictiva o condicionada. El proceso llevado a cabo ha sido obtener la distribución condicionada del GP a las observaciones\n",
        "    # Intenta calcular directamente la matriz, en caso contrario calcular la matriz de covarianza de la distribucion a priori dado el test\n",
        "    try:\n",
        "      self.Cov_pred = self.Cov_priori - np.matmul(v.T,v) #- self.vruidoBlanco(test,test.T,100)\n",
        "    except:\n",
        "      # En caso que no esté definida o no coincida con la dimensionalidad del test, se recalcula la covarianza a priori\n",
        "      self.Cov_priori = self.calcCovM(test,test.T)\n",
        "      self.Cov_pred = self.Cov_priori - np.matmul(v.T,v) #- self.vruidoBlanco(test,test.T,100)\n",
        "    \n",
        "    # La siguiente matriz descompuesta es necesaria para generar procesos del GP.\n",
        "    self.L_pred = self.cholDescomp(self.Cov_pred)\n",
        "  \n",
        "\n",
        "  def log_prob_verosimilitud_datos(self,hiper):\n",
        "    '''\n",
        "    Dadas unas observaciones, kernel e hiperparámetros dados, calcula el logaritmo de la probabilidad de verosimilitud de las observaciones al modelo y sus parámetros\n",
        "    '''\n",
        "\n",
        "    # Actualizamos hiperparámetros\n",
        "    self.Hiper = hiper\n",
        "\n",
        "    # Primero se realiza la descomposición cholesky de la adición de la covarianza de la distribución a priorir y el término de ruido.\n",
        "    #cholL = np.linalg.cholesky(self.calcCovM(dominio,dominio,*self.Hiper))\n",
        "    cholL = np.linalg.cholesky(self.calcCovM(self.xM,self.xM.T))\n",
        "\n",
        "    # Calculo del vector alfa como solucion del sistema K*alfa = y_entrenamiento usando la descomposición cholesky anterior\n",
        "    alfa = scipy.linalg.cho_solve((cholL,True),self.Observacion)\n",
        "\n",
        "    # Calculo de la probabilidad de verosimilitud marginal a este modelo y sus parámetros\n",
        "    y = np.reshape(self.Observacion,(len(self.Observacion)))\n",
        "    alfa = np.reshape(alfa,(len(alfa)))\n",
        "    self.log_marg_y = +1.*( 0.5*np.dot(alfa,y) + np.sum(np.log(np.diag(cholL)),axis=0) + (float(len(self.Dominio))/2.)*np.log(2*np.pi))\n",
        "    #if (self.log_marg_y > +90.):\n",
        "    #  self.log_marg_y = 90.\n",
        "    return self.log_marg_y\n",
        "\n",
        "  def der_log_prob_ver_hiper(self,hiper):\n",
        "    '''\n",
        "    Derivada del logaritmo de la probabilidad de verosimilitud respecto hiperapametros,\n",
        "    devuelve un ndarray con cada componenete correspondiendo a la matriz del modelo respecto\n",
        "    los distintos. La expresion es la siguiente\n",
        "\n",
        "    1/2 traza[  {alfa*alfa.T - K⁻¹} dK/dh] ; alfa = K⁻¹\\y\n",
        "\n",
        "    '''\n",
        "\n",
        "    # Actualizamos hiperparámetros\n",
        "    self.Hiper = hiper\n",
        "\n",
        "    # Definimos nueva covarianza\n",
        "    try:\n",
        "      covDom = self.calcCovM(self.xM,self.xM.T)\n",
        "    except:\n",
        "      raise NameError(\"Debes especificar primero el kernel que estas usando junto a sus hiperparametros con el metodo self.compCov\")\n",
        "\n",
        "\n",
        "    invCovDom = self.calcInvK(covDom)\n",
        "\n",
        "    cholL = np.linalg.cholesky(covDom)\n",
        "\n",
        "    # Calculo del vector alfa como solucion del sistema K_obs_obs*alfa = y_entrenamiento usando la descomposición cholesky anterior\n",
        "    alfa = scipy.linalg.cho_solve((cholL,True),self.Observacion)\n",
        "\n",
        "    alfa = np.reshape(alfa,(len(alfa),1))\n",
        "\n",
        "    self.Der_Hiper = hiper\n",
        "    derCovHiper = self.calcDerCovM(self.xM,self.xM.T)\n",
        "    return -0.5*np.trace(np.matmul(np.matmul(alfa,alfa.T)-invCovDom,derCovHiper),axis1=1,axis2=2) # La suma de la traza en un array de mas de 2 dimensiones debe especificarse sobre sus indices. En este caso es dimensióón 3.\n",
        "    \n",
        "\n",
        "  def prioriGP(self,dominio_test):\n",
        "    '''\n",
        "    Computa los términos necesarios para extraer realizaciones del GP siguiendo la distribución a priori\n",
        "    '''\n",
        "    \n",
        "    \n",
        "    self.Media_priori = 60.*np.ones(len(dominio_test))\n",
        "\n",
        "    self.xtest = np.reshape(dominio_test,(len(dominio_test),1))\n",
        "    xtest_full = np.full((len(self.xtest),len(self.xtest)),self.xtest)\n",
        "\n",
        "    try:\n",
        "      self.Cov_priori = self.calcCovM(xtest_full,xtest_full.T)\n",
        "    except:\n",
        "      raise NameError(\"Debes especificar primero el kernel que estas usando junto a sus hiperparametros con el metodo self.compCov\")\n",
        "\n",
        "    # La siguiente matriz descompuesta es necesaria para generar procesos del GP.\n",
        "    self.L_priori = self.cholDescomp(self.Cov_priori)\n",
        "\n",
        "\n",
        "  def procesosPrioriGP(self):\n",
        "    '''\n",
        "    Genera realizaciones del proceso gaussiano dada la descomposicion cholesky de la matriz de covarianzas y la media correspondiente\n",
        "    '''\n",
        "    # Si no se ha calculado la descomposicióón de la covarianza se llama al método aqui\n",
        "    try:\n",
        "      numeros_gaussianos_array = np.random.randn(len(self.xtest))\n",
        "      numeros_gaussianos_array = np.reshape(numeros_gaussianos_array,(len(numeros_gaussianos_array),1))\n",
        "      return self.Media_priori +  np.matmul(self.L_priori,numeros_gaussianos_array)\n",
        "    except:\n",
        "      raise NameError(\"No se ha incluido los valores del dominio sobre los que muestrear el proceso o no se ha calculado la descomposición de la covarianza\")\n",
        "\n",
        "  def procesosCondicionadosGP(self):\n",
        "    '''\n",
        "    Genera realizaciones del proceso gaussiano dada la descomposicion cholesky de la matriz de covarianzas y la media correspondiente\n",
        "    '''\n",
        "    try:\n",
        "      numeros_gaussianos_array = np.random.randn(len(self.xtest))\n",
        "      numeros_gaussianos_array = np.reshape(numeros_gaussianos_array,(len(numeros_gaussianos_array),1))\n",
        "      return self.Media_pred + np.matmul(self.L_pred,numeros_gaussianos_array)\n",
        "    except:\n",
        "      raise NameError(\"El GP no ha sido condicionado a las observaciones\")\n",
        "\n",
        "  def sigmaCalc(self,cov):\n",
        "    '''\n",
        "    Desviacion estándar punto a punto del proceso gausiano dado por la matriz de covarianza \n",
        "    Es la raiz cuadrado de los elementos de la diagonal de la matriz de covarianzas del proceso generado\n",
        "    '''\n",
        "    return np.sqrt(np.diag(cov))\n",
        "\n",
        "\n",
        "  def correlacionPuntoPunto(self):\n",
        "    '''\n",
        "    Obtiene la correlacion punto a punto dado un inputo concreto por el indice i_x\n",
        "    '''\n",
        "    try:\n",
        "      self.corrPP_pred = np.array([ self.K_pred[i,:] for i in range(len(self.K_pred)) ])\n",
        "    except:\n",
        "      print(\" Proceso gaussiano no entrenado aún, no existe K_pred \")\n",
        "    self.corrPP_prior = np.array([ self.K_prior[i,:] for i in range(len(self.K_prior)) ])\n",
        "\n",
        "  \n",
        "  def derivada_LO_CV(self,*args):\n",
        "    '''\n",
        "    Dadas unas observaciones particulares estima la derivada de la suma de los logaritmos de la evaluación de la distribución de probabilidad marginal de verosimilitud a que subconjuntos\n",
        "    de las observaciones están condicionadas al resto, respecto a los hiperparámetros del modelo. Si se encuentra el máximo de este valor, estamos asegurándonos de que con los hiperparámetros ajustados\n",
        "    las \"predicciones\" tras generar trayectorias del proceso gausiano que corresponderían a los subconjuntos excluidos sucesivamente son las más probables que el modelo puede hacer. Al ser la suma, esta optimización \n",
        "    es global y abarca la aproximación de observacion/test de todos los subconjuntos.\n",
        "    '''\n",
        "\n",
        "    if not isinstance(args[0], np.ndarray):\n",
        "      raise NameError(\"Las observaciones dadas para calcular la derivada del logaritmo de la distribución marginal de verosimilitud no es un array con datos\")\n",
        "    else:\n",
        "      observaciones = args[0]\n",
        "\n",
        "    # Vector auxiliar alpha y matriz auxiliar Z y la diagonal de la inversa de la distribucion a priori\n",
        "    try:\n",
        "      alpha = np.matmul(self.invK,observaciones)\n",
        "      invK_diag = np.diag(self.invK)\n",
        "      zeta = [np.matmul(self.invK,self.Derivadas[i]) for i in range(len(self.Derivadas)) ] # Es una lista de matrices\n",
        "      zeta_K = [np.diag(np.matmul(zeta[i],self.invK)) for i in range(len(self.Derivadas)) ]\n",
        "      alpha_invK = np.multiply(alpha,1./invK_diag)\n",
        "    except:\n",
        "      raise NameError(\"Necesitas calcular la matriz inversa de covarianzas de la distribución a priori\")\n",
        "    \n",
        "    termino_1 = [np.matmul(np.matmul(alpha_invK,zeta[i]),alpha) for i in range(len(self.Derivadas)) ] # Debido a Z esto es una lista\n",
        "    termino_2 = [np.sum(np.multiply(np.multiply(0.5*(1. + np.multiply(np.power(alpha,2),1./invK_diag)),zeta_K[i]),1./invK_diag)) for i in range(len(self.Derivadas)) ] # Debido a zeta_K esto es una lista\n",
        "\n",
        "    # Calculo. Es el valor de la derivada del logaritmo\n",
        "    self.derVerLOO = np.asarray([ termino_1[i] + termino_2[i] for i in range(len(self.Derivadas))])\n",
        "    "
      ],
      "execution_count": 41,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "tpQvsk6YBKxx",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "# Modulos y constantes\n",
        "\n",
        "import numpy as np\n",
        "import random\n",
        "import scipy\n",
        "import scipy.linalg\n",
        "from matplotlib import pyplot as plt\n",
        "#import seaborn as sns\n",
        "import pandas as pd\n"
      ],
      "execution_count": 1,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "hnsZAtobAvcb",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "outputId": "cc852942-649f-421d-d64c-b5d42b4b45f5"
      },
      "source": [
        "from google.colab import drive\n",
        "from scipy.optimize import minimize\n",
        "drive.mount('/content/drive/')\n",
        "\n",
        "# Exploramos los directorios de drive. Cambiamos directorio a donde estan los datos\n",
        "%cd /content/drive/My\\ Drive/datosContaminacionMadrid\n",
        "\n",
        "# Lo pasamos a dataframes\n",
        "est56NO2_df = pd.read_csv('Est56FL_CodPar08NO2_valuesonly.txt', header=0)\n",
        "\n",
        "\n",
        "est56NO2_np = est56NO2_df.to_numpy()\n",
        "est56NO2_np = est56NO2_np[0:400]\n",
        "est56NO2_np = np.reshape(est56NO2_np,(len(est56NO2_np)))\n",
        "\n",
        "#est56NO2_np = np.where(est56NO2_np != 0, est56NO2_np,1.)\n",
        "#rango = np.arange(400)/np.amax(np.arange(400))\n",
        "#rango = rango - np.sum(rango)/np.float(len(rango))\n",
        "rango = np.arange(400) + 1\n",
        "\n",
        "indices = np.where(est56NO2_np != 0.)\n",
        "est56NO2_np = est56NO2_np[indices]\n",
        "rango = rango[indices]\n",
        "\n",
        "\n",
        "plt.plot(rango,est56NO2_np)\n",
        "#est56NO2_np = est56NO2_np/np.amax(est56NO2_np)\n",
        "#est56NO2_np = est56NO2_np - np.sum(est56NO2_np)/np.float(len(est56NO2_np))\n",
        "\n",
        "\n",
        "# Creamos objetos para el ajuste de procesos gaussianos y asociamos kernel junto a sus derivadas\n",
        "est56NO2_GP = gaussProcess(rango,est56NO2_np,*[58.47496111,2.77278555,12.85749225])\n",
        "\n",
        "est56NO2_GP.compCov(lambda x,y,sh,lh,sigmah : est56NO2_GP.Kernels.exponencialCuadrada(x,y,sh,lh) + est56NO2_GP.Kernels.ruidoBlanco(x,y,sigmah)) # Aqui especificamos los hiperparametros\n",
        "funciones = np.asarray([lambda x,y,sh,lh,sigmah: est56NO2_GP.Kernels.expCua_der_s(x,y,sh,lh), lambda x,y,sh,lh,sigmah: est56NO2_GP.Kernels.expCua_der_l(x,y,sh,lh), lambda x,y,sh,lh,sigmah: est56NO2_GP.Kernels.rB_der_sigma(x,y,sigmah)])\n",
        "est56NO2_GP.compDerCov(funciones)\n",
        "\n",
        "\n",
        "test = np.linspace(-5,405,1000)\n",
        "est56NO2_GP.prioriGP(test)\n",
        "est56NO2_GP.condicionarGP(test)\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "# Calculo del mínimo de los hiperparámetros\n",
        "#x0 = np.array([40.,15.,1.])\n",
        "#res = minimize(est56NO2_GP.log_prob_verosimilitud_datos,x0, method='BFGS', jac=est56NO2_GP.der_log_prob_ver_hiper,options={'xatol': 1e-8,'disp': True})\n",
        "#print(\"hiperparametros que minimizan :\",res.x)\n",
        "\n",
        "sigma_pred = est56NO2_GP.sigmaCalc(est56NO2_GP.Cov_pred)\n",
        "sigma_prior = est56NO2_GP.sigmaCalc(est56NO2_GP.Cov_priori)\n",
        "\n",
        "n_r = 1\n",
        "\n",
        "\n",
        "# A priori\n",
        "visualizacion_prior = datosVisualizacion(\"Distribucion a priori\")\n",
        "\n",
        "visualizacion_prior.add_covariance(est56NO2_GP.Cov_priori)\n",
        "visualizacion_prior.add_sigma(test,sigma_prior)\n",
        "visualizacion_prior.add_mean(test,est56NO2_GP.Media_priori)\n",
        "visualizacion_prior.add_train_data(rango,est56NO2_np)\n",
        "\n",
        "[visualizacion_prior.add_data(test,est56NO2_GP.procesosPrioriGP(),inset) for inset in range(n_r) ]\n",
        "[visualizacion_prior.add_data_plot(inset) for inset in range(n_r) ] # Visualiza trayectorias obtenidas de la distribución a priori\n",
        "\n",
        "visualizacion_prior.mostrarPlot() # Muestra incertidumbre de la distribución de trayectorias a priori\n",
        "\n",
        "# Predictivo\n",
        "visualizacion_poste = datosVisualizacion(\"Distribucion a posteriori\")\n",
        "\n",
        "visualizacion_poste.add_covariance(est56NO2_GP.Cov_pred)\n",
        "visualizacion_poste.add_sigma(test,sigma_pred)\n",
        "visualizacion_poste.add_mean(test,est56NO2_GP.Media_pred)\n",
        "visualizacion_poste.add_train_data(rango,est56NO2_np)\n",
        "\n",
        "[visualizacion_poste.add_data(test,est56NO2_GP.procesosCondicionadosGP(),inset) for inset in range(n_r) ]\n",
        "#[visualizacion_poste.add_data_plot(inset) for inset in range(n_r) ]\n",
        "\n",
        "visualizacion_poste.mostrarPlot() # Muestra incertidumbre de la distribución de trayectorias a posteriori\n",
        "visualizacion_poste.hmapCov()\n",
        "\n",
        "# Procedemos a maximizar la probabilidad de verosimilitud al modelo de los datos\n",
        "\n",
        "\n",
        "# In[ ]:\n"
      ],
      "execution_count": 43,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Drive already mounted at /content/drive/; to attempt to forcibly remount, call drive.mount(\"/content/drive/\", force_remount=True).\n",
            "/content/drive/My Drive/datosContaminacionMadrid\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 720x720 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\n",
            "text/plain": [
              "<Figure size 720x720 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 720x720 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\n",
            "text/plain": [
              "<Figure size 720x720 with 2 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        }
      ]
    }
  ]
}